0.02^0*0.98^25
25*0.02*0.98^24
0.3078902+0.6034647
pbinom(1,25,0.02)
pbinom(1,25,0.05)
qnorm(0.01,0.035,0.02)
pnorm(0.04,0.035,0.02)-pnorm(0.04,0.035,0.02)
pnorm(0.04,0.035,0.02)-pnorm(0.02,0.035,0.02)
pnorm(0.04,0.035,0.02)-pnorm(0.03,0.035,0.02)
pnorm(0.04,0.035,0.02)-pnorm(0.03,0.035,0.02)
0.1974127/0.372079
1-pnorm(0,0.035,0.02)
1-pbinom(2,6,0.9599408)
0.035*4
0.02^2
0.02^2*4
pnorm(0.15,0.14,0.04)
0.6*0.035+0.4*0.05
0.36*0.02^2+0.16*0.04^2
0.0004
0.02^2
1-pnorm(0.04,0.041,0.02)
0.7*0.9113549+0.3*0.6423759
0.3*0.6423759/0.8306612
0.35*0.04*0.02
0.00028*2*0.6*0.4
1-pnorm(0.04,0.041,0.0005344^1/2)
0.05-0.07*0.035
0.02*0.7+0.05*0.3
1-pgeom(9,0.029)
install.packages("ggplot2")
library(ggplot2)
p <- ggplot(df)
p <- ggplot(df,aes(args))
print(p)
p
install.packages(rmarkdown)
install.packages("rmarkdown")
---
knitr::opts_chunk$set(echo = TRUE)
---
x1 <- c(seq(1:7))
y1 <- x1^2
df1 <- data.frame(x1,y1)
head(df1,3)
x1 <- c(seq(1:7))
y1 <- x1^2
df1 <- data.frame(x1,y1)
head(df1,3)
x2 <- c(seq(1, 13, by = 2))
y2 <- x2^1.5
df2 <- data.frame(x2,y2)
library(ggplot2)
g <- ggplot(df1)
print(g)
g <- g + geom_line(aes(x=x1,y=y1))
print(g)
p + geom_point(aes(x = PU,
y = UseMins,
shape = Dept))
mydata = read.csv("http://home.gwu.edu/~kanungo/files/HaveFunWithR/IntroductionToR.csv")
head(mydata, 3)
p <- ggplot(mydata)
p <- ggplot(mydata, aes(x=AgeYrs))
p + geom_histogram()
p <- ggplot(mydata)
p + aes(AgeYrs) + geom_histogram(color="blue",
fill="yellow",
binwidth = 5)
p <- ggplot(mydata)
p + aes(AgeYrs) + geom_histogram(color="blue",
fill="pink",
binwidth = 5)
p <- ggplot(mydata)
p + aes(AgeYrs) + geom_histogram(color="pink",
fill="pink",
binwidth = 5)
p + stat_smooth(method = "lm",
formula = y ~ x,
size = 1)
p + stat_smooth(method = "lm", se = FALSE,
formula = y ~ x,
size = 1)
p + aes(x = Dept, y = PU) +
geom_boxplot(fill = "grey80",
colour = "blue") +
scale_x_discrete() +
xlab("Department") +
ylab("Perceived usefulness")
p <- ggplot(mydata) +
aes(x = PEOU,
y = PU) +
geom_point()
p
p <- ggplot(mydata) +
aes(x = PEOU,
y = PU) +
geom_point(size = 3,
color='orange')
print(p)
p + stat_smooth(method = "lm",
formula = y ~ x,
size = 1)
ggplot(mydata, aes(x = PU)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(mydata, aes(x = PU)) +
geom_histogram(binwidth=1, colour="black", fill="white")
ggplot(mydata, aes(x = PU)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(mydata, aes(x = PU)) +
geom_histogram(binwidth=1, colour="black", fill="white")
1-ppois(85/5,20)
1-ppois(85/20,5)
pnorm(0,1,3)
pnorm(0,10,30)
0.6+0.8
dpois(10,20)
1-pexep(5,2/3)
1-pexp(5,2/3)
1-pbinom(1,5,0.4)
dbinom(2,5,0.4)+dbinom(3,5,0.4)+dbinom(4,5,0.4)+dbinom(5,5,0.4)
pnorm(110,90,15)
qnorm(0.95,90,15)
qnorm(0.95,75,15)
0.7*115
+30
0.7*115+30
(1-pnorm(110,90,15))*0.7
0.3*(1-pnorm(110,75,15))
0.06384785/(0.06384785+0.002944599)
90+125
15^2+25^2
1-pnorm(180,215,850^(1/2))
850^1/2
850^(1/2)
1-pnorm(180,215,29.15476)
0.8850255*0.7
1-pnorm(180,175,850^(1/2))
0.4319159*0.3
0.6195178+0.1295748
(1-pnorm(180,215,850^(1/2)))*0.7/(1-pnorm(180,215,850^(1/2)))*0.7+(1-pnorm(180,175,850^(1/2)))*0.3
(1-pnorm(180,215,850^(1/2)))*0.7/((1-pnorm(180,215,850^(1/2)))*0.7+(1-pnorm(180,175,850^(1/2)))*0.3)
0.6195178/017490926
0.6195178/0.7490926
(1-pnorm(110,90,15))*(1-pnorm(110,125,25))*0.7
(1-pnorm(110,75,15))*(1-pnorm(110,100,25))*0.3
0.001014645+0.04633738
0.04633738/0.04735202
0.3*(1-pnorm(105,75,15))
0.3*pnorm(105,75,15)
0.7*(1-pnorm(105,90,15))
0.7*pnorm(105,90,15)
0.00682504+0.293175+0.1110587+0.5889413
0.0068+0.2932
0.0068+0.2932+0.5889+0.1111
0.293175+0.5889413
0.1110587+0.5889413
0.8821163*0.7
0.5889413-0.8821163*0.7
dpois(10,20)
e
exp(-2/3*5)
1-0.6^5-5*0.6^4*0.4
pnorm(110,90,15)
qnorm(0.95,90,15)
qnorm(0.95,75,15)
0.7*(1-pnorm(110,90,15))
0.3*(1-pnorm(110,75,15))
0.06384785/(0.06384785+ 0.002944599)
15*15+25+25
15*15+25*25
0.7*(1-pnorm(180,215,850^(1/2)))
0.3*(1-pnorm(180,175,850^(1/2)))
0.6195178+0.1295748
1-pnorm(110,90,15)
1-pnorm(110,125,25)
0.09121122*0.7257469*0.7
1-pnorm(110,75,15)
1-pnorm(110,100,25)
0.009815329*0.3445783*0.3
0.001014645+ 0.04633738
0.04633738/0.04735202
pnorm(109,90,15)
1-pnorm(104,75,15)
0.02659757*0.3
0.3*pnorm(104,75,15)
0.7*pnorm(104,90,15)
0.7*(1-pnorm(104,90,15))
0.2920207+0.5772732
0.1227268+0.5772732
0.5772732-0.8692939*0.7
1-pnorm(104,75,15)
0.3* 0.02659757
0.3- 0.007979271
0.7*(1-pnorm(104,90,15))
pnorm(109,90,15)
0.3*(1-pnorm(104,75,15))
0.3*pnorm(104,75,15)
a <- 3.5432
b <- as.integer(a)
b
a <- c(2,4,6)
b <- True
b <- TRUE
c <- 9.76
d <- "Raj"
myList <- list(a,b,c,d)
length(myList)
myList[1]
myList[c(1,3)]
myList[(1,3)]
myList[c(1,3)]
type(a)
type(myList)
myList[c(2:4)]
a <- array(1:8,dim=c(2,2,2))
print(a)
a[,,1]
a[,1,]
a[1,,]
mydata = read.csv("http://home.gwu.edu/~kanungo/files/HaveFunWithR/IntroductionToR.csv")
names(mydata)
summary(mydata)
attach(mydata)
summary(PU)
table(Sex,Dept)
hist(UseMins, prob=TRUE)
hist(UseMins)
hist(UseMins, prob=TRUE)
hist(UseMins)
hist(UseMins, prob=TRUE)
hist(UseMins)
hist(UseMins, prob=TRUE)
lines(density(column))
lines(density(UseMins))
mean(UseMins)
t.test(UseMins, mu=40)
t.test(UseMins, mu=40, alternative = "greater")
t.test(PU,PULast,paired=TRUE)
mydata$diff = PU - PULast
attach(mydata)
view(mydata)
View(mydata)
t.test(diff, mu=0)
hist(diff,prob =TRUE)
lines(density(diff))
plot(AgeYrs ~ Sex)
plot(AgeYrs)
plot(AgeYrs,Sex)
plot(AgeYrs~Sex)
library(sm)
install.packages(sm)
install.packages(sm)
install.packages("sm")
library("sm")
library(sm)
sm.density.compare(AgeYrs,Sex,xlab="Age in Years")
title(main="Age Distribution")
legend("topright",level(Sex),fill = 2+(0:nlevels(Sex)))
legend("topright",level(Sex),fill = 2+(0:nlevel(Sex)))
legend("topright",levels(Sex),fill = 2+(0:nlevels(Sex)))
sm.density.compare(AgeYrs,Sex,xlab="Age in Years")
title(main="Age Distribution")
legend("topright",levels(Sex),fill = 2+(0:nlevels(Sex)))
t.test(AgeYrs ~ Sex)
t.test(AgeYrs ~ Sex,var.equal = TRUE)
fit <- aov(AgeYrs ~ Dept, data=mydata)
summary(fit)
myPi <- function(myList) {}
myPi <- function(myList) {}
FlixIt <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign01/FlixIt.dat",header=TRUE)
summary(FlixIt)
attach(FlixIt)
sd(Income)
sd(Kids)
Income.slr <- lm(Stream~Income, data=FlixIt)
summary(Income.slr)
Kids.slr <- lm(Stream~Kids, data=FlixIt)
summary(Kids.slr)
nrow(FlixIt)
perdict(Income.slr,data.frame(Income=53),interval="predict")
predict(Income.slr,data.frame(Income=53),interval="predict")
predict(Kids.slr,data.frame(Kids=3),interval = "predict")
M = matrix(1:!2,3,4)
M = matrix(1:12,3,4)
M[1:2,1:2]
nrow M
nrow (Mï¼‰
nrow(M)
transpose=t(M)
transpose
z <- seq(-3,3,.1)
z
d <- dnorm(z)
d
plot(z,d,type="1")
plot(z,d,type="l")
inversion=solve(M)
a=matrix(1:9,3,3)
inversion = solve(a)
inversion = solve.default(a)
a=matrix(1:3,2,2)
a=matrix(1:4,2,2)
inversion = solve(a)
inversion
pie(rep(1,16),col=rainbow(16))
pie(1:4,col=c("red","green","blue","white"))
person = list(name="Jane",age=24)
person[1]
person[[1]]
fpe <- read.table("http://data.princeton.edu/wws509/datasets/effort.dat")
fpe = read.table("noheader.dat")
table <- read.csv("Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv")
names(table)
table <- read.csv("Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv")
table <- read.csv("/Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv")
table <- read.csv("Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv")
names(table)
shiny::runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
names(read.csv("/Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv"))
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
table <- read.csv("/Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv")
names(table)
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/Lectures/Week8/Shiny/05-regression')
xlab("Independent Variable")+
ylab("Dependent Variable")+
theme(legend.position="none",
theme(legend.position="none",
theme(legend.position="none",
panel.background=background_style,
tags$hr()),
table <- read.csv("/Users/apple1/Desktop/GWU/Programming/assignments/assign5/iris.csv")
names(table)
df_subset <- table[c(Sepal.Length,Sepal.Width)]
df_subset <- table[c("Sepal.Length","Sepal.Width")]
df_subset
geom_smooth(data=df_subset,aes(x=input$xcol,y=input$ycol), method='lm')
library(ggplot2)
geom_smooth(data=df_subset,aes(x=input$xcol,y=input$ycol), method='lm')
g <- geom_smooth(data=df_subset,aes(x=input$xcol,y=input$ycol), method='lm')
print(g)
g <- geom_smooth(data=df_subset,aes(x="Sepal.Length",y="Sepal.Width"), method='lm')
print(g)
shiny::runApp('Desktop/GWU/Programming/assignments/assign5')
g <- ggplot(NULL)+
geom_point(data=df_subset, aes(x="Sepal.Length",y="Sepal.Width", color="red", size=5))
print(g)
runApp('Desktop/GWU/Programming/assignments/assign5')
g <- ggplot(NULL)+
geom_point(data=df_subset, aes(x=Sepal.Length,y=Sepal.Width, color="red", size=5))
print(g)
g <- ggplot(NULL)+
geom_point(data=df_subset, aes(x=df_subset[1],y=df_subset[2], color="red", size=5))
print(g)
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
shiny::runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
shiny::runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
shiny::runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
shiny::runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
c(Comma=',', Semicolon=';',Tab='\t'), ','),
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shiny)
library(shinydashboard)
shiny::runApp('Downloads/Assignment-5 Rithvik')
shiny::runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
shiny::runApp('Downloads/Assignment-5 Group-3')
shiny::runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
runApp('Desktop/GWU/Programming/assignments/assign5/shiny')
FlixIt <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign02/FlixIt.dat",header=TRUE)
summary(FlixIt)
FlixIt <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign02/FlixIt.dat",header=FALSE)
summary(FlixIt)
FlixIt <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign02/FlixIt.dat",header=FALSE,col.names = c("ID","Hours","Income","History"))
summary(FlixIt)
names(FlixIt)
SLR <- lm(Hours~Income + history, data=FlixIt)
SLR <- lm(Hours~Income + history, data=FlixIt)
SLR <- lm(Hours~Income + history, data=FlixIt)
SLR <- lm(Hours~Income + History, data=FlixIt)
summary(SLR)
MR <- lm(Hours~Income + History, data=FlixIt)
summary(MR)
etasq(MR,anova=TRUE,partial=FALSE)
require(heplots)
require("heplots")
package.install("heplots")
packages.install("heplots")
install.packages("heplots")
require(heplots)
etasq(MR,anova=TRUE,partial=FALSE)
LR1 <- lm(Hours~Income , data=FlixIt)
summary(LR1)
LR2 <- lm(Hours~History , data=FlixIt)
summary(LR2)
nrow(FlixIt)
MR <- lm(Hours~Income + History, data=FlixIt)
summary(MR)
MR <- lm(Hours~Income + History, data=FlixIt)
summary(MR)
shiny::runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/GWU/Programming/assignments/assign5')
runApp('Desktop/ECNU')
runApp('Desktop/ECNU')
runApp('Desktop/ECNU')
runApp('Desktop/ECNU')
runApp('Desktop/ECNU')
runApp('Desktop/ECNU')
shiny::runApp('Desktop/ECNU')
shiny::runApp('Desktop/GWU/Programming/Final Project/Shiny')
runApp('Desktop/GWU/Programming/Final Project/Shiny')
runApp('Desktop/GWU/Programming/Final Project/Shiny')
runApp('Desktop/GWU/Programming/Final Project/Shiny')
runApp('Desktop/GWU/Programming/Final Project/Shiny')
runApp('Desktop/GWU/Programming/FinalProject/Shiny')
runApp('Desktop/GWU/Programming/FinalProject/Shiny')
Odnetnin <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign03/Odnetnin.dat",header=TRUE)
Odnetnin
Odnetnin <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign03/Odnetnin.dat",header=TRUE)
Odnetnin
summary(Odnetnin)
summary(Odnetnin)
slr1 <- lm(Costs~Healthiness,data=Odnetnin)
summary(slr1)
packages.install(agricolae)
install.packages(agricolae)
install.packages('agricolae')
Odnetnin <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign03/Odnetnin.dat",header=TRUE)
summary(Odnetnin)
slr1 <- lm(Costs~Healthiness,data=Odnetnin)
summary(slr1)
slr2 <- lm(Costs~Engagement,data=Odnetnin)
summary(slr2)
mr <- lm(Costs~Engagement,data=Odnetnin)
summary(mr)
require(heplots)
etasq(mr,anova=TRUE,partial=FALSE)
Odnetnin <- read.table("/Users/apple1/Desktop/GWU/Statistics/Assignments/Assign03/Odnetnin.dat",header=TRUE)
summary(Odnetnin)
slr1 <- lm(Costs~Healthiness,data=Odnetnin)
summary(slr1)
slr2 <- lm(Costs~Engagement,data=Odnetnin)
summary(slr2)
nrows(Odnetnin)
rows(Odnetnin)
nrow(Odnetnin)
mr <- lm(Costs~Engagement,data=Odnetnin)
summary(mr)
mr <- lm(Costs~Engagement+Healthiness,data=Odnetnin)
summary(mr)
mr <- lm(Costs~Healthiness+Engagement,data=Odnetnin)
summary(mr)
require(heplots)
etasq(mr,anova=TRUE,partial=FALSE)
library(agricolae)
attach(Odnetnin)
correlation(Healthiness,Engagement,method="pearson")
predict(mr,data.frame(Healthiness=50,Engagement=25),interval="predict")
mr <- lm(Costs~Healthiness+Engagement,data=Odnetnin)
summary(mr)
shiny::runApp('Desktop/shinnnny')
runApp('Desktop/shinnnny')
runApp('Desktop/shinnnny')
runApp('Desktop/shinnnny')
runApp('Desktop/shinnnny')
####Programming Final Project
shiny::runApp('Desktop/shinytab')
