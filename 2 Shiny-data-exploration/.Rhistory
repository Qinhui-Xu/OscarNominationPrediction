wins2013<- c(97,97,92,93,92,96,94,96,92,90)
cor(teamRank,wins2012)
cor(teamRank,wins2013)
(7*6*5*5*4*3*9*8*7)/pow(21,6)
(7*6*5*5*4*3*9*8*7)/21^6
(7*6*5*5*4*3*9*8*7)/(20*19*21)^3
(7*6*5*5*4*3*9*8*7)/(20*19*21)
((7*6*5)+(5*4*3)+(9*8*7))/(20*19*21)
7*9*5/choose(21,3)
(7*5*9)/(21^3)
choose(52,3)*(4/52)
choose(52,3)
choose(4,3)/choose(52,3)
(3*2)/(25*17)
choose(4,3)/choose(52,3)
13*(choose(4,3)/choose(52,3) )
(13*3*2)/choose(52,3)
(13*4*3*12*4)/choose(52,3)
((13*4*3)+12*4))/choose(52,3)
((13*4*3)+12*4)/choose(52,3)
((13*4*3)+(12*4))/choose(52,3)
(13*12*11)/(13^3)
choose(13,3)/choose(52,3)
(13*12*11*4)/(13^3)
(13* choose(4,2)*12*4)/choose(52,3)
1-((13* choose(4,2)*12*4)/choose(52,3) +0.0023)
(13*choose(4,2)*12*choose(4,1))/choose(52,3)
1-(0.0023+0.1694)
(48*44)/(51*50)
?plot
?plot
??plot
(7*5*9)/choose(21,3)
(7*5*9)/choose(21,3)*6
choose(7,1)
(7*5*9)/choose(21,3)*6
(7*5*9)/choose(21,3)*6
(7*5*9)/choose(21,3)
pinf = seq(0,1,0.1)
pinf
prob= seq(0,1,0.1)
prob
str(c(1,10))
str(c(1:10))
prob= c(1:10)
str(prob)
pinf[2]
pinf[3]
for i in pinf
{
prob[i]= (0.027*i)/((0.027*i)+(0.995*(1-i))
}
for i in pinf
{
prob[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
}
for (i in pinf)
{
prob[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
}
prob
for (i in pinf)
{
prob[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
}
prob
for (i in pinf)
{
prob1[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
}
prob1
prob1=0
for (i in pinf)
{
prob1[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
}
prob1
for (i in pinf)
{
prob1[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
print prob1
}
for (i in 1:10)
{
prob1[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
print prob1
}
a=10
print a
for (i in 1:10)
{
prob1[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
prob1
}
for (i in seq(0,1,0.1))
{
prob1[i]= (0.027*i)/((0.027*i)+(0.995*(1-i)))
prob1
}
prob1
plot(prob1,pinf)
pinf
pinf = c(seq(0,1,0.1))
pinf
plot(prob1,c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0))
plot(c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0),prob1, col="blue",type="l")
prob1[i]
data()
data()boston
(0.973*0.125*0.0076)
(0.973*0.125*0.0076)/[(0.973*0.125*0.0076)+(0.005*0.95*0.9924)]
(0.973*0.125*0.0076)/((0.973*0.125*0.0076)+(0.005*0.95*0.9924))
(0.973*0.875*0.0076)/((0.973*0.875*0.0076)+(0.005*0.05*0.9924))
# installing/loading the latest installr package:
install.packages("installr"); library(installr) # install+load installr
updateR() # updating R.
update.packages(ask = F)
q()
q()
x=seq(0.05,0,1)
?seq
x=seq(0,1,0.05)
y=5*(x^4)
plot(y,x)
plot(x,y)
plot(x,y,type=l)
plot(x,y,type="l")
x=(y^2)*15/2*(1-y^2)
plot(x,y,type=l)
plot(x,y,type="l")
plot(y,x,type="l")
x=(y^2)*(15/2)*(1-y^2)
plot(y,x,type="l")
plot(x,y,type="l")
x=(y^2)*(15/2)*(1-(y^2))
plot(x,y,type="l")
y=seq(0,1,0.05)
x=((y^2)*(15/2)*(1-(y^2)))
plot(x,y,type="l")
plot(y,x,type="l")
pbinom(200,198,0.99)
pbinom(198,200,0.99)
1-pbinom(199,200,0.99)-pbinom(200,200,0.99)
1-dbinom(199,200,0.99)-dbinom(200,200,0.99)
1-(dbinom(0,10,0.2)+dbinom(1,10,0.2))
1-(dbinom(0,10,0.2)+dbinom(1,10,0.2))/(1-dbinom(199,200,0.99))
1-(dbinom(0,10,0.2)+dbinom(1,10,0.2))/(1-dbinom(0,10,0.2)))
(1-(dbinom(0,10,0.2)+dbinom(1,10,0.2)))/(1-dbinom(0,10,0.2)))
(1-(dbinom(0,10,0.2)+dbinom(1,10,0.2)))/(1-dbinom(0,10,0.2))
dat<- read.csv("C:\Users\Rithvik\Desktop\MSBA\Stochastic Foundations\Assignments\Services.csv")
dat<- read.csv("C:\\Users\\Rithvik\\Desktop\\MSBA\\Stochastic Foundations\\Assignments\\Services.csv")
dat<- read.csv("C:\\Users\\Rithvik\\Desktop\\MSBA\\Stochastic Foundations\\Assignments\\Service.csv")
dat
lambda<- 1/(mean(dat$Service))
hist(dat$Service)
hist(dat$Service,col="blue")
x=seq(0,2740,1)
x=seq(0,2734,1)
dexp(1,1)
dexp(1,10)
dexp(1,1)
?dexp
dexp(1,2)
hist(dat$Service,col="blue")
lines(density, col="red")
density
den<-dexp(x,lambda)
hist(dat$Service,col="blue")
lines(den, col="red")
hist(dat$Service,col="blue")
lines(den,type="l" col="red")
den<-dexp(x,0.00302)
hist(dat$Service,col="blue")
lines(den,type="l" col="red")
den<-dexp(x,0.00302)
hist(dat$Service,col="blue")
lines(den,type='l' col="red")
den<-dexp(x,0.00302)
hist(dat$Service,col="blue")
lines(den,type='l', col="red")
hist(dat$Service,nclass=35,col="blue",probability=TRUE)
lines(den,type='l', col="red")
den<-dexp(x,lambda)
hist(dat$Service,nclass=35,col="blue",probability=TRUE)
lines(den,type='l', col="red")
summary(den)
summary(dat$Service)
-ln(0.25)/lambda
-log(0.25)/lambda
-log(0.50)/lambda
-log(0.75)/lambda
(1-pbinom(10,1,0.2))/(1-pbinom(10,0,0.2))
pbinom(10,1,0.2)
dbinom(10,0,0.2)+dbinom(10,1,0.2)
dbinom(10,2,0.2)
dbinom(10,4,0.2)
(1-pbinom(1,10,0.2))/(1-pbinom(0,10,0.2))
pbinom(288,320,0.85)
pbinom(270,320,0.85)
dbinom(330,300,0.85)
dbinom(300,330,0.85)
dbinom(300,340,0.85)
dbinom(300,341,0.85)
pbinom(300,341,0.85)
pbinom(300,340,0.85)
pbinom(300,342,0.85)
pbinom(300,341,0.85)
?qbinom
qbinom(0.95,330,0.85)
qbinom(0.95,350,0.85)
qbinom(0.95,340,0.85)
qbinom(0.95,341,0.85)
qbinom(0.95,342,0.85)
pbinom(270,320,0.85)
pbinom(300,330,0.85)
pbinom(300,340,0.85)
pbinom(300,341,0.85)
pbinom(300,342,0.85)
1-pbinom(3,15,0.01
)
pbinom(2,,15,0.01)
pbinom(2,15,0.01)
1-pbinom(3,15,0.01)
pbinom(2,15,0.05)
dgeom(4,0.9)
dgeom(2,0.9)
dgeom(1,0.5)
dgeom(0,0.5)
dpois(20,20)
ppois(20,20)
dpois(45,20)
ppois(45,20)
ppois(4o,20)
ppois(40,20)
ppois(30,20)
pbinom(198,200,0.01)
dbinom(198,200,0.01)
pbinom(198,200,0.99)
ppois(2,3.2)
dpois(0,3.2)+dpois(1,3.2)+dpois(2,3.2)
1-ppois(1,1.2)
1-ppois(0,1.2)
(0.91)^10 * 0.09
1-ppois(85,100)
20*5
30*5
2/5
pgamma(0.5,2,5)
1-ppois(70,75)
15*5
ppois(89,100)
ppois(89,100)*1-ppois(70,75)
ppois(89,100)*(1-ppois(70,75))
ppois(35,35)
1-ppois(40,35)
1-dpois(40,35)
dpois(6,10)
dpois(6,5)
dpois(10,10)
dpois(3,10)
dpois(4,10)
dpois(1,10)
dpois(6,10)
dpois(6,5)
(1-pnorm(725,675,30))/(1-pnorm(710,675,30))
qnorm(710,675,30)
qnorm(0.8,675,30)
qnorm(0.85,675,30)
qnorm(0.87,675,30)
qnorm(0.89,675,30)
qnorm(0.88,675,30)
qnorm(0.885,675,30)
qnorm(0.881,675,30)
qnorm(0.878,675,30)
qnorm(0.879,675,30)
dbinom(3,10,0.12)
1-pnorm(30000,36500,4000)
pnorm(30000,36500,4000)
pnorm(36500,36500,4000)
1-pnorm(36500,36500,4000)
1-pnorm(40500,36500,4000)
pnorm(40500,36500,4000)
pnorm(30000,36500,4000)
pnorm(30000,36500,4000)-pnorm(28000,36500,4000)
pnorm(30000,36500,4000)-pnorm(28000,36500,4000)/0.052
(pnorm(30000,36500,4000)-pnorm(28000,36500,4000))/0.052
ppois(35,35)
ppois(34,35)
qnorm(0.052,36500,4000)
dbinom(0,10,0.2)
pbinom(0,10,0.2)
pnorm(30000,36500,4000)
(1-pnorm(30000,36500,4000))/pnorm(30000,36500,4000)
qnorm(0.052,36500,4000)
qnorm(0.035,36500,4000)
1-dbinom(0,10,0.052)
qnorm(0.01,0.035,0.02)
pnorm(0,0.035,0.02)
1-pnorm(0,0.035,0.02)
ppois(39,35)
dbinom(3,10,0.12)
1-pnorm(725,675,sqrt(90))
(pnorm(30000,36500,4000)-pnorm(28000,36500,4000))/pnorm(30000,36500,4000)
pnorm(30000,36500,4000)
1-dbinom(10,0,0.05208)
1-dbinom(0,10,0.05208)
?qnorm
(1-0.02)^10*(0.02)
(1-0.02)^10
1-[((1-0.02)^9)(0.02)]
1-[((1-0.02)^9)*(0.02)]
1-(((1-0.02)^9)*(0.02))
1-pgeom(9,0.02))
1-pgeom(9,0.02)
pgeom(9,0.02)
(1-0.02)^9
(1-0.02)^9*(0.02)
dgeom(9,0.02)
1-pgeom(9,0.05)
0.7*(1-pgeom(9,0.02)) + (0.3*(1-pgeom(9,0.05))
(0.7*(1-pgeom(9,0.02))) + (0.3*(1-pgeom(9,0.05))
(0.7*(1-pgeom(9,0.02))) + (0.3*(1-pgeom(9,0.05)))
(0.3*(1-pgeom(9,0.05)))/(0.7*(1-pgeom(9,0.02))) + (0.3*(1-pgeom(9,0.05)))
(0.3*(1-pgeom(9,0.05)))/((0.7*(1-pgeom(9,0.02))) + (0.3*(1-pgeom(9,0.05))))
dbinom(0,25,0.02)+dbinom(1,25,0.02)
dbinom(0,25,0.05)+dbinom(1,25,0.05)
pbinom(1,25,0.02)
((0.70)*pbinom(1,25,0.02))+(0.30)*(pbinom(1,25,0.05))
(0.30*(pbinom(1,25,0.05)))/((0.70)*pbinom(1,25,0.02))+(0.30)*(pbinom(1,25,0.05))
(0.30*(pbinom(1,25,0.05)))/(((0.70)*pbinom(1,25,0.02))+(0.30)*(pbinom(1,25,0.05)))
pgamma(4,2,40)
pgamma(4,2,30)
rep(1,10)
install.packages("ggplot2")
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("cluster")
```{r}
mydata = read.csv("http://home.gwu.edu/~kanungo/files/HaveFunWithR/IntroductionToR.csv")
```
head(mydata, 3)
```{r}
p <- ggplot(mydata)
library(ggplot2)
p <- ggplot(mydata)
p <- ggplot(mydata, aes(x=AgeYrs))
p + geom_histogram()
p <- ggplot(mydata, aes(x=AgeYrs))
p + geom_histogram(binwidth = 5)
View(mydata)
View(mydata)
p <- ggplot(mydata)
p + aes(AgeYrs) + geom_histogram(color="blue",
fill="yellow",
binwidth = 5)
```
breaks <- pretty(range(mydata$PULast),
n = nclass.FD(mydata$PULast),
min.n = 1)
bwidth <- breaks[2]-breaks[1]
p <- ggplot(mydata)
p + aes(PULast) + geom_histogram(binwidth = bwidth,
fill = "pink",
breaks <- pretty(range(mydata$PULast),
n = nclass.FD(mydata$PULast),
min.n = 1)
bwidth <- breaks[2]-breaks[1]
p <- ggplot(mydata)
p + aes(PULast) + geom_histogram(binwidth = bwidth,
fill = "pink",
color = "black")
```{r}
p <- ggplot(mydata)
p + geom_point(aes(x = PU,
y = UseMins))
p + geom_point(aes(x = PU,
y = UseMins,
color = Sex))
p + geom_point(aes(x = PU,
y = UseMins,
color = Sex),
size = 4)
p + geom_point(aes(x = PU,
y = UseMins,
shape = Dept))
p + geom_point(aes(x = PU,
y = UseMins,
shape = Dept),
size = 4)
```
p + geom_point(aes(x = PU,
y = UseMins,
color=Sex,
shape = Dept),
size = 4)
```
p %+% subset(mydata, AgeYrs>35) +
geom_point(aes(x = PU,
y = UseMins,
color = Sex))
p %+% subset(mydata, AgeYrs>35) +
geom_point(aes(x = PU,
y = UseMins,
color = Sex),
size=4)
p + geom_point(aes(x = PEOU, y = PU)) + facet_grid(Dept ~ .)
p + geom_point(aes(x = PEOU, y = PU)) #+ facet_grid(Dept ~ .)#
p + geom_point(aes(x = PEOU, y = PU)) + facet_grid(Dept ~ Sex)
```
p + geom_point(aes(x = PEOU, y = PU)) + facet_grid(Dept ~ Sex)
ylab("Perceived usefulness")
p + aes(x = Dept, y = PU) +
geom_boxplot(fill = "grey80",
colour = "blue") +
scale_x_discrete() +
xlab("Department") +
ylab("Perceived usefulness")
p <- ggplot(mydata) +
aes(x = PEOU,
y = PU) +
geom_point()
p
p <- ggplot(mydata) +
aes(x = PEOU,
y = PU) +
geom_point(size = 3,
color='orange')
print(p)
```
p + stat_smooth(method = "lm",
formula = y ~ x,
size = 1)
```
p + stat_smooth(method = "lm", se = FALSE,
formula = y ~ x,
size = 1)
```
p + stat_smooth(method = "loess",
formula = y ~ x,
size = 1)
p + stat_smooth(method = "lm",
formula = y ~ poly(x, 2),
size = 1)
#2nd order fitting function
p + stat_smooth(method = "lm",
formula = y ~ x + I(x^2),
size = 1)
#2nd order fitting function
```
p + stat_smooth(method = "lm",
formula = y ~ x + I(x^2) + I(x^3),
size = 1)
#3rd order function
p +  stat_smooth(method = "lm",
formula = y ~ poly(x, 2),
size = 1) +
facet_grid(Dept~ .)
ggplot(mydata, aes(x=PU)) + geom_histogram(binwidth=.5)
ggplot(mydata, aes(x = PU)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(mydata, aes(x = PU)) + geom_density()
ggplot(mydata, aes(x = PU)) +
geom_histogram(aes(y=..density..),          # density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")      # overlaid with transparent density plot
ggplot(mydata, aes(x = PU)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
```
a="facility_name,facility_key,site_address,city,state,zip,owner_key,owner_name,nature_of_business,street_number,street_name,street_type,post_directional,phone,program_category,program_category_des,inspection_date,inspection_type,inspection_desc,serial_num,action_code,action_desc,result_code,result_desc,violation_code,violation_desc,inspection_memo"
a
a.upper()
upper(a)
uppercase(a)
toupper(a)
x=c(1,2,34,5,6,7,8,9)
y=c(12,24,4,3,23,17,18,49)
plot(x,y)
plot(x~y)
mean(c(1,1,1))
x=data.frame(c(1,2,3),c(2,3,4))
x
x(,1)
x[,1
]
x[,1:2]
y=data.frame(x[,1])
y
colnames(y)
nrow(y)
head(y,1)
head(y,2)
x
y
head(x,2)
r="This constraint gives the equation which sums the ingredients used in each cereal"
r.upper()
upper(r)
#Programming Assignment5
selectedData = read.csv(infile$datapath)
shiny::runApp('C:/Users/Rithvik/Desktop/MSBA/Programming for Analytics/Assignment/Assignment-5 Rithvik')
runApp('C:/Users/Rithvik/Desktop')
?predict
??predict
?predict
shiny::runApp('C:/Users/Rithvik/Desktop/MSBA/Programming for Analytics/Final Project/shiny-data-exploration - 2')
runApp('C:/Users/Rithvik/Desktop/MSBA/Programming for Analytics/Final Project/shiny-data-exploration - 2')
runApp('C:/Users/Rithvik/Desktop/MSBA/Programming for Analytics/Final Project/shiny-data-exploration - 2')
install.packages("dt")
install.packages("DT")
shiny::runApp()
runApp('C:/Users/Rithvik/Desktop/MSBA/Programming for Analytics/Final Project/shinytab 2')
